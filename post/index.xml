<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Gary Weissman, MD, MSHP</title>
    <link>/post/</link>
    <description>Recent content in Posts on Gary Weissman, MD, MSHP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Comparison of bootstrapping approaches for identifying variance of predictive performance</title>
      <link>/post/comparison-of-bootstrapping-approaches-for-identifying-variance-of-predictive-performance/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/comparison-of-bootstrapping-approaches-for-identifying-variance-of-predictive-performance/</guid>
      <description>Background Bootstrapping is a helpful technique for identifying the variance of an estimate in a given sample when no other data are available. In the case of the evaluation of clinical prediction models, bootstrapping can be used to estimate confidence intervals around performance metrics such as the Brier score, the c-statistic, and others. When the original model and its tuning parameters, and the original dataset are available, the data can be resampled and the model refit on each replicate to make predictions.</description>
    </item>
    
    <item>
      <title>Evaluating the equivalence of different formulations of the scaled Brier score</title>
      <link>/post/evaluating-the-equivalence-of-different-formulations-of-the-scaled-brier-score/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/evaluating-the-equivalence-of-different-formulations-of-the-scaled-brier-score/</guid>
      <description>Background The Brier Score is a composite measure of discrimination and calibration for a prediction model. The Brier Score is defined as
\[ BS = \frac{1}{N} \sum (y_i - \hat y_i)^2, \]
where \(N\) is the number of observations, \(y_i\) is the observed outcome, either 0 or 1, and \(\hat y_i\) is the predicted probability for the \(i\)th observation. Let’s create an R function calculate the Brier Score:
brier_score &amp;lt;- function(obs, pred) { mean((obs - pred)^2) } The scaled Brier Score accounts for the event rate and provides an immediate comparison to an uninformative model that is equivalent to “just guess the event rate.</description>
    </item>
    
    <item>
      <title>Building a recurrent neural network to predict time-series data with Keras in Python</title>
      <link>/post/building-a-recurrent-neural-network-to-predict-time-series-data-with-keras-in-python/</link>
      <pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/building-a-recurrent-neural-network-to-predict-time-series-data-with-keras-in-python/</guid>
      <description>Recurrent neural networks and their variants are helpful for extracting information from time series. Here&amp;rsquo;s an example using sample data to get up and running.
I found the following other websites helpful in reading up on code examples:
 https://machinelearningmastery.com/multi-step-time-series-forecasting-long-short-term-memory-networks-python/ https://github.com/rstudio/keras/blob/master/vignettes/examples/lstm_benchmark.py https://github.com/jaungiers/LSTM-Neural-Network-for-Time-Series-Prediction/blob/master/lstm.py  # setup import numpy as np import pandas as pd import math import matplotlib.pyplot as plt from keras.models import Sequential from keras.layers import Dense, Dropout, SimpleRNN from keras.</description>
    </item>
    
    <item>
      <title>Making choropleth maps by zip code</title>
      <link>/post/making-choropleth-maps-by-zip-code/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/making-choropleth-maps-by-zip-code/</guid>
      <description>Every now and then it is useful to make a map. In times of political uncertainty, data can light a path forward. Your local elected officals may be interested in data, too, and how they impact policy (and re-election, of course).
Let&amp;rsquo;s say you wanted to know if people are still enrolling the Healthcare.gov plans in your local State Senatorial district. It&amp;rsquo;s quite difficult to find data broken up at this level but zip codes can approximate such an approach.</description>
    </item>
    
    <item>
      <title>Grey’s Anatomy Network of Sexual Relations</title>
      <link>/post/grey-s-anatomy-network-of-sexual-relations/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/grey-s-anatomy-network-of-sexual-relations/</guid>
      <description>Here&amp;rsquo;s the blog post originally posted on babelgraph.org on March 25, 2011. The relevant hyperlinks and igraph code have been updated to reflect the current state of things. The edgelist, despite many more intervening seasons, and thus many more romances, has not been updated. Here is a nice walkthrough of ERGMs based on this post &amp;ndash; sorry for the broken link, Ben.
This all began with an introductory presentation about social network analysis to a group of medical students.</description>
    </item>
    
    <item>
      <title>The structure of twitter participant relationships in conversations around #Libya, #Bieber, and #Rstats</title>
      <link>/post/the-structure-of-twitter-participant-relationships-in-conversations-around-libya-bieber-and-rstats/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/the-structure-of-twitter-participant-relationships-in-conversations-around-libya-bieber-and-rstats/</guid>
      <description>Here&amp;rsquo;s the blog post originally posted on babelgraph.org on April 4, 2011. I suspect the twitter API and much of the code below are not up to date.
I am a recent comer to twitter, and it took me a few weeks to figure out what this was all about. Who are all these people tweeting each other and what do all these trending hashtags mean? Do these people all know each other?</description>
    </item>
    
    <item>
      <title>Transportation data in R: Why yes, yes you can</title>
      <link>/post/transportation-data-in-r-why-yes-yes-you-can/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/transportation-data-in-r-why-yes-yes-you-can/</guid>
      <description>Not infrequently I am in a research meeting and someone says, &amp;ldquo;It would be really cool to get data on travel times for people. But I don&amp;rsquo;t know where to find that.&amp;rdquo; Here you will find just that. Please note that Google Maps terms of service are relevant for large data requests and potential privacy concerns for protected health information.
Case Mr. Jones spends all his time at a coffee shop.</description>
    </item>
    
    <item>
      <title>Welcome to the blog!</title>
      <link>/post/welcome-to-the-blog/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/welcome-to-the-blog/</guid>
      <description>Welcome to this blog, which is the new home for thoughts and technical things. As babelgraph.org has been retired, you can still get the code at:
BabelGraph Alpha
Over time I will try to migrate the old blog posts (mostly dealing with network analyses and C++ using R) to here along with the very informative user comments, and updates.
For old time&amp;rsquo;s sake, here is the old thumbnail gallery from the BabelGraph Alpha release (mixed Linux and Mac screenshots).</description>
    </item>
    
    <item>
      <title>R can write R code, too</title>
      <link>/post/r-can-write-r-code-too/</link>
      <pubDate>Wed, 15 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/r-can-write-r-code-too/</guid>
      <description>Here&amp;rsquo;s the blog post originally posted on babelgraph.org on April 14, 2012.
In a recent blog post by CMastication, a little meme puzzle is presented with the introduction that a preschooler could solve it in 5-10 minutes, a programmer in an hour. I took the bait.
The original problem goes like this:
8809=6 7111=0 2172=0 6666=4 1111=0 3213=0 7662=2 9313=1 0000=4 2222=0 3333=0 5555=0 8193=3 8096=5 7777=0 9999=4 7756=1 6855=3 9881=5 5531=0 2581=?</description>
    </item>
    
    <item>
      <title>Rcpp is smoking fast for agent based models in data frames</title>
      <link>/post/rcpp-is-smoking-fast-for-agent-based-models-in-data-frames/</link>
      <pubDate>Wed, 15 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/rcpp-is-smoking-fast-for-agent-based-models-in-data-frames/</guid>
      <description>Here&amp;rsquo;s the blog post originally posted on babelgraph.org on July 11, 2012. Thanks to Hadley Wickham for referencing some of content here, and apologies for the broken URL. NB. The original C++ code didn&amp;rsquo;t seem to compile on my computer today. It required a small tweak with NumericVector::create &amp;ndash; see below.
In particular, R data frames provide a simple framework for representing large cohorts of agents in stochastic epidemiological models, such as those representing disease transmission.</description>
    </item>
    
  </channel>
</rss>